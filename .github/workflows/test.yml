name: CI Build, Test, and Package
on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            make \
            build-essential \
            tree
      - name: Build
        run: |
          make clean
          mkdir -p build
          make -j$(nproc)
          echo "Build artifacts:"
          ls -l build/
      - name: Verify headers exist
        run: |
          echo "Header files:"
          ls -l include/ || echo "No include directory found"
          [ -d "include" ] || mkdir -p include
      - name: Run tests
        run: |
          cd tests && make clean && make && make test
  package:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Prepare packaging
        run: |
          mkdir -p dist/{lib,include}

          # Verify and copy headers
          if [ -d "include" ]; then
            echo "Copying headers from include/"
            cp -r include/* dist/include/ || echo "No headers to copy"
          else
            echo "Warning: include/ directory not found"
            mkdir -p dist/include
          fi

          # Static library
          if [ -f "build/libcrypto.a" ]; then
            cp build/libcrypto.a dist/lib/
          else
            echo "Warning: Static library not found"
          fi

          # Shared libraries
          if ls build/libcrypto.so* 1>/dev/null 2>&1; then
            cp build/libcrypto.so* dist/lib/
            cd dist/lib && \
            sofile=$(ls libcrypto.so.* | head -n1) && \
            ln -sf "$sofile" libcrypto.so
          else
            echo "Error: No shared libraries found"
            exit 1
          fi

          # pkg-config
          VERSION=${GITHUB_REF#refs/tags/v}
          cat > dist/libcrypto.pc <<EOF
          prefix=/usr/local
          libdir=\${prefix}/lib
          includedir=\${prefix}/include

          Name: libcrypto
          Description: Educational crypto library
          Version: $VERSION
          Libs: -L\${libdir} -lcrypto
          Cflags: -I\${includedir}
          EOF

          echo "Final package contents:"
          tree dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libcrypto-${{ github.ref_name }}
          path: dist/
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/lib/*
            dist/include/*
            dist/libcrypto.pc
