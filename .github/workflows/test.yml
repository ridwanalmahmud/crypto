name: CI Build, Test, and Package
on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            make \
            build-essential \
            tree
      - name: Build with debug output
        run: |
          make clean
          mkdir -p build
          make -j$(nproc) V=1
          echo "Build artifacts:"
          ls -l build/
      - name: Verify build outputs
        run: |
          [ -f "build/libcrypto.a" ] || echo "Warning: Static library not built yet"
          ls build/libcrypto.so* || echo "Warning: Shared library not built yet"
          [ -d "include" ] || echo "Warning: Include directory not found"
      - name: Run tests
        run: |
          cd tests && make clean && make && make test
  package:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Rebuild for packaging
        run: |
          make clean
          mkdir -p build
          make -j$(nproc)
      - name: Determine version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Building version: ${VERSION}"
      - name: Package artifacts
        run: |
          # Create directory structure
          mkdir -p dist/{lib,include,pkgconfig}

          # Handle shared libraries (more flexible matching)
          SHARED_LIB=$(ls build/libcrypto.so* 2>/dev/null | head -n1)
          if [ -n "$SHARED_LIB" ]; then
            echo "Found shared library: $SHARED_LIB"
            cp "$SHARED_LIB" dist/lib/
            LIB_NAME=$(basename "$SHARED_LIB")
            cd dist/lib
            ln -sf "$LIB_NAME" libcrypto.so
            cd -
          else
            echo "Error: No shared library found in build/"
            ls -l build/
            exit 1
          fi

          # Handle static library
          if [ -f "build/libcrypto.a" ]; then
            echo "Copying static library"
            cp build/libcrypto.a dist/lib/
          else
            echo "Error: Static library not found"
            ls -l build/
            exit 1
          fi

          # Handle headers
          if [ -d "include" ]; then
            echo "Copying headers"
            cp -r include/* dist/include/
          else
            echo "Error: Include directory not found"
            exit 1
          fi

          # Create pkg-config file
          cat > dist/pkgconfig/libcrypto.pc <<EOF
          prefix=/usr/local
          libdir=\${prefix}/lib
          includedir=\${prefix}/include

          Name: libcrypto
          Description: Educational crypto library
          Version: $VERSION
          Libs: -L\${libdir} -lcrypto
          Cflags: -I\${includedir}
          EOF

          # Verify package
          echo "Final package contents:"
          tree dist/
          echo "pkg-config contents:"
          cat dist/pkgconfig/libcrypto.pc
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libcrypto-${{ env.VERSION }}
          path: dist/
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/lib/*
            dist/include/*
            dist/pkgconfig/libcrypto.pc
