name: CI Build, Test, and Package
on:
  push:
    branches: [main]
    tags: ['v*'] # Triggers on tags like v1.1.0
  pull_request:
    branches: [main]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang make
      - name: Build
        run: |
          mkdir -p build
          make clean
          make -j$(nproc)
      - name: Run tests
        run: |
          cd tests && make clean && make && make test
  package:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang make
      - name: Build (for packaging)
        run: |
          mkdir -p build
          make -j$(nproc)
      - name: Determine version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Detected version: ${VERSION}"
      - name: Verify files exist
        run: |
          echo "Checking build directory:"
          ls -l build/
          if [ ! -f "build/libcrypto.so" ] && [ ! -f "build/libcrypto.a" ]; then
            echo "Error: Missing built libraries!"
            exit 1
          fi
      - name: Package artifacts
        run: |
          mkdir -p dist/{lib,include}

          # Copy libraries (handle both versioned and unversioned .so)
          if [ -f "build/libcrypto.so.$VERSION" ]; then
            cp build/libcrypto.so.$VERSION dist/lib/
            cd dist/lib && ln -s libcrypto.so.$VERSION libcrypto.so
          else
            cp build/libcrypto.so dist/lib/
          fi
          cp build/libcrypto.a dist/lib/

          # Copy headers
          cp -r include/* dist/include/

          # Generate pkg-config file
          cat > dist/libcrypto.pc <<EOF
          prefix=/usr/local
          libdir=\${prefix}/lib
          includedir=\${prefix}/include

          Name: libcrypto
          Description: Educational crypto library
          Version: $VERSION
          Libs: -L\${libdir} -lcrypto
          Cflags: -I\${includedir}
          EOF

          echo "Packaged contents:"
          tree dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libcrypto-${{ env.VERSION }}
          path: dist/
      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/lib/*
            dist/include/*
            dist/libcrypto.pc
